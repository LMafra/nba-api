version: '3.8'

services:
  frontend:
    env_file: ./.env
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./frontend:/home/frontend
    ports:
      - $FRONTEND_LOCAL_PORT:$FRONTEND_LOCAL_PORT
    environment:
      - FRONTEND_LOCAL_PORT=$FRONTEND_LOCAL_PORT
    depends_on:
      - backend

  backend:
    env_file: ./.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend/src:/home/backend/src
      - ./backend/nodemon.json:/home/backend/nodemon.json
    ports:
      - $BACKEND_LOCAL_PORT:$BACKEND_LOCAL_PORT
    environment:
      - BACKEND_LOCAL_PORT=$BACKEND_LOCAL_PORT
      - POSTGRESDB_HOST=postgresdb
      - POSTGRESDB_USER=$POSTGRESDB_USER
      - POSTGRESDB_ROOT_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRESDB_DATABASE=$POSTGRESDB_DATABASE
      - POSTGRESDB_LOCAL_PORT=$POSTGRESDB_LOCAL_PORT
    depends_on:
      - postgresdb

  postgresdb:
    container_name: "postgres"
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRESDB_DATABASE=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_LOCAL_PORT
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  db:
